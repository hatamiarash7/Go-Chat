name: Release

on:
  release:
    types: [published]

jobs:
  build:
    name: Build for ${{ matrix.os }} (${{ matrix.arch }})
    runs-on: ubuntu-20.04
    strategy:
      fail-fast: false
      matrix:
        os: [linux, windows, darwin]
        arch: [amd64, arm64]
        include:
          - { os: linux, arch: 386 }
          - { os: windows, arch: 386 }
    steps:
      - uses: actions/setup-go@v3
        with:
          go-version: 1.19

      - uses: actions/checkout@v3

      - uses: gacts/github-slug@v1
        id: slug

      - name: Generate builder values
        id: values
        run: echo "::set-output name=binary-name::go-chat-${{ matrix.os }}-${{ matrix.arch }}`[ ${{ matrix.os }} = 'windows' ] && echo '.exe'`"

      - name: Install Go dependencies
        run: go mod download

      - name: Build application
        env:
          GOOS: ${{ matrix.os }}
          GOARCH: ${{ matrix.arch }}
          CGO_ENABLED: 0
          LDFLAGS: -s -w -X github.com/hatamiarash7/go-chat/internal/pkg/version.version=${{ steps.slug.outputs.version }}
        run: go build -trimpath -ldflags "$LDFLAGS" -o "./${{ steps.values.outputs.binary-name }}" .

      - name: Upload binaries to release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: ${{ steps.values.outputs.binary-name }}
          asset_name: ${{ steps.values.outputs.binary-name }}
          tag: ${{ github.ref }}
